#+TITLE: @@latex: Introduction to OS-Level Virtualization on Linux@@
#+AUTHOR:    @@latex: \vspace{-2em}@@ \footnotesize Pedro Bruel \newline \scriptsize \emph{phrb@ime.usp.br}
#+EMAIL:     phrb@ime.usp.br
#+DATE:      \scriptsize May 25th, 2020
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:2 num:t toc:nil @:t \n:nil ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   tex:t latex:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_FILE_NAME: linux-containers.pdf
#+LINK_UP:
#+LINK_HOME:

#+STARTUP: beamer
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [10pt, compress, aspectratio=169, xcolor={table,usenames,dvipsnames}]
#+LATEX_HEADER: \mode<beamer>{\usetheme[numbering=fraction, progressbar=none, titleformat=smallcaps, sectionpage=none]{metropolis}}

#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)

#+LATEX_HEADER: \usepackage{sourcecodepro}
#+LATEX_HEADER: \usepackage{booktabs}
#+LATEX_HEADER: \usepackage{array}
#+LATEX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \usepackage{caption}
#+LATEX_HEADER: \usepackage{xeCJK}
#+LATEX_HEADER: \usepackage{graphicx}
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage[scale=2]{ccicons}
#+LATEX_HEADER: \usepackage{hyperref}
# #+LATEX_HEADER: \usepackage{url}
#+LATEX_HEADER: \usepackage{relsize}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{bm}
#+LATEX_HEADER: \usepackage{wasysym}
#+LATEX_HEADER: \usepackage{ragged2e}
#+LATEX_HEADER: \usepackage{textcomp}
#+LATEX_HEADER: \usepackage{pgfplots}
#+LATEX_HEADER: \usepgfplotslibrary{dateplot}
#+LATEX_HEADER: \definecolor{Base}{HTML}{191F26}
# #+LATEX_HEADER: \definecolor{Accent}{HTML}{157FFF}
#+LATEX_HEADER: \definecolor{Accent}{HTML}{bb0300}
#+LATEX_HEADER: \setbeamercolor{alerted text}{fg=Accent}
#+LATEX_HEADER: \setbeamercolor{frametitle}{bg=Base}
#+LATEX_HEADER: \setbeamercolor{normal text}{bg=black!2,fg=Base}
#+LATEX_HEADER: \setsansfont[BoldFont={Source Sans Pro Semibold},Numbers={OldStyle}]{Source Sans Pro}
#+LATEX_HEADER: \lstdefinelanguage{Julia}%
#+LATEX_HEADER:   {morekeywords={abstract,struct,break,case,catch,const,continue,do,else,elseif,%
#+LATEX_HEADER:       end,export,false,for,function,immutable,mutable,using,import,importall,if,in,%
#+LATEX_HEADER:       macro,module,quote,return,switch,true,try,catch,type,typealias,%
#+LATEX_HEADER:       while,<:,+,-,::,/},%
#+LATEX_HEADER:    sensitive=true,%
#+LATEX_HEADER:    alsoother={$},%
#+LATEX_HEADER:    morecomment=[l]\#,%
#+LATEX_HEADER:    morecomment=[n]{\#=}{=\#},%
#+LATEX_HEADER:    morestring=[s]{"}{"},%
#+LATEX_HEADER:    morestring=[m]{'}{'},%
#+LATEX_HEADER: }[keywords,comments,strings]%
#+LATEX_HEADER: \lstset{ %
#+LATEX_HEADER:   backgroundcolor={},
#+LATEX_HEADER:   basicstyle=\ttfamily\scriptsize,
#+LATEX_HEADER:   breakatwhitespace=true,
#+LATEX_HEADER:   breaklines=true,
#+LATEX_HEADER:   captionpos=n,
#+LATEX_HEADER:   commentstyle=\color{Accent},
# #+LATEX_HEADER:   escapeinside={\%*}{*)},
#+LATEX_HEADER:   extendedchars=true,
#+LATEX_HEADER:   frame=n,
#+LATEX_HEADER:   keywordstyle=\color{Accent},
#+LATEX_HEADER:   language=R,
#+LATEX_HEADER:   rulecolor=\color{black},
#+LATEX_HEADER:   showspaces=false,
#+LATEX_HEADER:   showstringspaces=false,
#+LATEX_HEADER:   showtabs=false,
#+LATEX_HEADER:   stepnumber=2,
#+LATEX_HEADER:   stringstyle=\color{gray},
#+LATEX_HEADER:   tabsize=2,
#+LATEX_HEADER: }
#+LATEX_HEADER: \renewcommand*{\UrlFont}{\ttfamily\smaller\relax}
#+LATEX_HEADER: \graphicspath{{../../img/}}
#+LATEX_HEADER: \addtobeamertemplate{block begin}{}{\justifying}

#+LATEX_HEADER: \captionsetup[figure]{labelformat=empty}

# #+LATEX_HEADER: \titlegraphic{\hspace*{\fill}\includegraphics[height=.85\textheight]{../../imgs_comuns/computador_grego.jpg}}

* Setup                                            :B_ignoreheading:noexport:
  :PROPERTIES:
  :BEAMER_env: ignoreheading
  :END:
  #+HEADER: :results output :exports none
  #+BEGIN_SRC emacs-lisp
  (setq-local org-latex-pdf-process (list "latexmk -xelatex %f"))
  #+END_SRC

  #+RESULTS:


* Resources                                        :B_ignoreheading:noexport:
  :PROPERTIES:
  :BEAMER_env: ignoreheading
  :END:
** Containers from Scratch
*** Getting Files from Docker Images
    #+begin_SRC shell :results output :session *Shell* :eval no-export :exports results
    sudo docker pull debian:latest
    sudo docker save debian:latest | gzip > data/debian_latest.tar.gz
    #+end_SRC
*** Talks
    - [[https://www.youtube.com/watch?v=8fi7uSYlOdc][Liz Rice, GOTO 2018]]
    - [[https://www.youtube.com/watch?v=_TsSmSu57Zo][Liz Rice, Container Camp]]
    - [[https://www.youtube.com/watch?v=I326bpbdvJo][Antony Shaw, Pycon]]
*** Images
    - [[https://pbs.twimg.com/media/ERP973GXYAAaD9d?format=jpg&name=large][Julia Evans, Containers aren't magic]]
    - [[https://pbs.twimg.com/media/ESZIbtfXQAIPwNs?format=jpg&name=large][Julia Evans, containers = processes]]
*** Code
    - [[https://github.com/lizrice/containers-from-scratch][lizrice, containers from scratch in Go]]
    - [[https://github.com/p8952/bocker][Bocker, docker in bash]]
    - [[https://github.com/tonybaloney/mocker][Mocker, docker in python]]
*** Tutorials
    - [[https://btholt.github.io/complete-intro-to-containers/][btholt, Complete Intro to Containers]]
*** Useful Links
    - [[https://en.wikipedia.org/wiki/Cgroups][Cgroups]]
    - [[https://en.wikipedia.org/wiki/Linux_namespaces][Namespaces]]
    - [[https://en.wikipedia.org/wiki/List_of_Linux_containers][List of Linux Containers]]
    - [[https://en.wikipedia.org/wiki/Operating_system-level_virtualization][OS-level virtualization]]
    - [[https://github.com/opencontainers/][OpenContainers Initiative]]
* Introduction
** What are Simulation, Emulation, Virtualization?
*** Images                                                            :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.75
    :END:
    #+latex: \only<1-2>{
    #+ATTR_LATEX: :width 0.9\columnwidth
    [[file:../../img/pilotwings64.jpg]]
    #+latex: }
    #+latex: \only<3>{
    #+ATTR_LATEX: :width 0.9\columnwidth
    [[file:../../img/wii_n64.png]]
    #+latex: }
    #+latex: \only<4>{
    #+ATTR_LATEX: :width 0.9\columnwidth
    [[file:../../img/wii_n64_win7.png]]
    #+latex: }
    #+latex: \only<5-6>{
    #+ATTR_LATEX: :width 0.9\columnwidth
    [[file:../../img/wii_n64_win7_debian.png]]
    #+latex: }

*** Progression                                                       :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.25
    :END:
    #+latex: \only<1>{
    #+ATTR_LATEX: :width .7\columnwidth
    [[file:../../img/pw64_flight.pdf]]
    #+latex: }
    #+latex: \only<2>{
    #+ATTR_LATEX: :width .7\columnwidth
    [[file:../../img/n64_pw64_flight.pdf]]
    #+latex: }
    #+latex: \only<3>{
    #+ATTR_LATEX: :width .7\columnwidth
    [[file:../../img/wii_n64_pw64_flight.pdf]]
    #+latex: }
    #+latex: \only<4>{
    #+ATTR_LATEX: :width .7\columnwidth
    [[file:../../img/win7_wii_n64_pw64_flight.pdf]]
    #+latex: }
    #+latex: \only<5>{
    #+ATTR_LATEX: :width .7\columnwidth
    [[file:../../img/debian_win7_wii_n64_pw64_flight.pdf]]
    #+latex: }
    #+latex: \only<6>{
    #+ATTR_LATEX: :width .7\columnwidth
    [[file:../../img/arch_debian_win7_wii_n64_pw64_flight.pdf]]
    #+latex: }
** OS-Level Virtualization
   #+ATTR_LATEX: :width .7\columnwidth
   [[file:../../img/virtualization_concept.pdf]]
** OS-Level Virtualization on Linux
   #+ATTR_LATEX: :width \columnwidth
   [[file:../../img/virtualization_normal_kernel.pdf]]
** OS-Level Virtualization on Linux
   #+ATTR_LATEX: :width \columnwidth
   [[file:../../img/virtualization_kernel.pdf]]
* Containers on Linux
** How do Containers Work?
   #+ATTR_LATEX: :width .81\columnwidth
   [[file:../../img/how-containers-work_pg0.pdf]]
** How do Containers Work?
   Images used *with permission*:
   #+ATTR_LATEX: :width .72\columnwidth
   [[file:../../img/hcw_permission_twitter.png]]
** Containers on Linux are Just Processes
   #+ATTR_LATEX: :width .86\columnwidth
   [[file:../../img/how-containers-work_pg7.pdf]]
** Containers on Linux use Some Kernel Features
   #+ATTR_LATEX: :width .86\columnwidth
   [[file:../../img/how-containers-work_pg8.pdf]]
* Containers from Scratch
** Containers from Scratch: Obtaing an "Image"
   #+begin_SRC bash :results output :session *Shell* :eval no-export :exports code :tangle "src/virtualization_cgroups/launch_alpine_container.sh"
   #!/usr/bin/bash

   IMG_DIR="alpine_img"
   IMG_REPO="https://us.images.linuxcontainers.org/images"
   IMG_URL="$IMG_REPO/alpine/3.11/amd64/default/20200521_13:00/rootfs.tar.xz"
   [ ! -d $IMG_DIR ] && \
       mkdir -p $IMG_DIR && \
       curl $IMG_URL | tar xJ -C $IMG_DIR
   cd $IMG_DIR
   #+end_SRC

   #+RESULTS:
   : IMG_DIR="alpine_img"   IMG_DIR=[33m"[33ma[33ml[33mp[33mi[33mn[33me[33m_[33mi[33mm[33mg[33m"[39m[?2004l
   : ]0;~/cloud/presentations/org/linux-containersI% [?2004hI% IMG_URL="https://us.images.linuxcontainers.org/images/" \   IMG_URL=[33m"[33mh[33mt[33mt[33mp[33ms[33m:[33m/[33m/[33mu[33ms[33m.[33mi[33mm[33ma[33mg[33me[33ms[33m.[33ml[33mi[33mn[33mu[33mx[33mc[33mo[33mn[33mt[33ma[33mi[33mn[33me[33mr[33ms[33m.[33mo[33mr[33mg[33m/[33mi[33mm[33ma[33mg[33me[33ms[33m/[33m"[39m [31m\[39m[?2004l
   : [?2004h>        "alpine/3.11/amd64/default/20200521_13:00/rootfs.tar.xz"         [31m"[31ma[31ml[31mp[31mi[31mn[31me[31m/[31m3[31m.[31m1[31m1[31m/[31ma[31mm[31md[31m6[31m4[31m/[31md[31me[31mf[31ma[31mu[31ml[31mt[31m/[31m2[31m0[31m2[31m0[31m0[31m5[31m2[31m1[31m_[31m1[31m3[31m:[31m0[31m0[31m/[31mr[31mo[31mo[31mt[31mf[31ms[31m.[31mt[31ma[31mr[31m.[31mx[31mz[31m"[39m[?2004l
   : zsh: no such file or directory: alpine/3.11/amd64/default/20200521_13:00/rootfs.tar.xz
   : ]0;~/cloud/presentations/org/linux-containersI% [?2004hI% mkdir -p $IMG_DIR && curl $IMG_URL | tar xJ -C $IMG_DIR   [32mm[32mk[32md[32mi[32mr[39m -p $IMG_DIR && [32mc[32mu[32mr[32ml[39m $IMG_URL | [32mt[32ma[32mr[39m xJ -C $IMG_DIR[?2004l
   : Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
   :                                  Dload  Upload   Total   Spent    Left  Speed
   :   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0echo 'org_babel_sh_eoe'
   :   0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0 14 2407k   14  352k    0     0   166k      0  0:00:14  0:00:02  0:00:12  166k 47 2407k   47 1152k    0     0   367k      0  0:00:06  0:00:03  0:00:03  367k 71 2407k   71 1728k    0     0   415k      0  0:00:05  0:00:04  0:00:01  415k 97 2407k   97 2336k    0     0   469k      0  0:00:05  0:00:04  0:00:01  469k100 2407k  100 2407k    0     0   483k      0  0:00:04  0:00:04 --:--:--  618k
** Containers from Scratch: Creating cgroups and Setting Limits
   #+begin_SRC bash :results output :session *Shell* :eval no-export :exports code :tangle "src/virtualization_cgroups/launch_alpine_container.sh"
   CGROUP_ID="MAC0475-145"
   sudo cgcreate -g "cpu,cpuacct,memory:$CGROUP_ID"
   sudo cgset -r cpu.shares=512 "$CGROUP_ID" # 1024 is 100% CPU
   sudo cgset -r memory.limit_in_bytes=10000000000 "$CGROUP_ID"
   #+end_SRC

   #+RESULTS:
   : CGROUP_ID="MAC0475-145"   CGROUP_ID=[33m"[33mM[33mA[33mC[33m0[33m4[33m7[33m5[33m-[33m1[33m4[33m5[33m"[39m[?2004l
   : ]0;~/cloud/presentations/org/linux-containersI% [?2004hI% sudo cgcreate -g "cpu,cpuacct,memory:$CGROUP_ID"[?2004l
   : ]0;~/cloud/presentations/org/linux-containersI% [?2004hI% sudo cgset -r cpu.shares=512 "$CGROUP_ID" # 1024 is 100% CPU[?2004l
   : ]0;~/cloud/presentations/org/linux-containersI% [?2004hI% sudo cgset -r memory.limit_in_bytes=10000000000 "$CGROUP_ID"[?2004l

** Containers from Scratch: Launching the Alpine Container
   #+begin_SRC bash :results output :session *Shell* :eval no-export :exports code :tangle "src/virtualization_cgroups/launch_alpine_container.sh"
   HOSTNAME="alpine-container"
   sudo cgexec -g "cpu,cpuacct,memory:$CGROUP_ID" \
        unshare -fmuipn --mount-proc \
        chroot "$PWD/" \
        /bin/sh -c "PATH=/bin && mount -t proc proc /proc && hostname $HOSTNAME && sh"

   # Cleanup:
   sudo cgdelete "cpu,cpuacct:/$CGROUP_ID"
   #+end_SRC

   #+RESULTS:
   : CGROUP_ID="MAC0475-145"   CGROUP_ID=[33m"[33mM[33mA[33mC[33m0[33m4[33m7[33m5[33m-[33m1[33m4[33m5[33m"[39m[?2004l
   : ]0;~/cloud/presentations/org/linux-containersI% [?2004hI% sudo cgcreate -g "cpu,cpuacct,memory:$CGROUP_ID"[?2004l
   : ]0;~/cloud/presentations/org/linux-containersI% [?2004hI% sudo cgset -r cpu.shares=512 "$CGROUP_ID" # 1024 is 100% CPU[?2004l
   : ]0;~/cloud/presentations/org/linux-containersI% [?2004hI% sudo cgset -r memory.limit_in_bytes=10000000000 "$CGROUP_ID"[?2004l


* Docker Containers
* Docker Compose
